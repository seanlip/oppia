name: Lighthouse accessibility tests
on:
  workflow_run:
    workflows: [Prepare env for full-stack tests]
    types: [completed]

jobs:
  identify_suites_to_run:
    if: ${{ github.event.workflow_run.conclusion == 'success' }}
    name: Identify which suites to run
    steps:
      - name: Download suites-to-run mapping
        uses: actions/download-artifact@v4
        with:
          run-id: ${{ github.event.workflow_run.id }}
          name: suites-to-run
          github-token: ${{ secrets.GITHUB_TOKEN }}
      - name: Parse suites-to-run mapping
        runs-on: ubuntu-22.04
        id: set_test_suites_to_run
        run: echo "TEST_SUITES_JSON=$(cat ./suites-to-run.json)" >> "$GITHUB_OUTPUT"
    outputs:
      test_suites_to_run: ${{ fromJSON(steps.set_test_suites_to_run.outputs.TEST_SUITES_JSON) }}
  lighthouse_accessibility:
    needs: check_test_suites_to_run
    if: ${{ needs.identify_suites_to_run.outputs.test_suites_to_run.lighthouse_accessibility.count > 0 }}
    runs-on: ubuntu-22.04
    strategy:
      matrix:
        suite: ${{ needs.identify_suites_to_run.outputs.test_suites_to_run.lighthouse_accessibility.suites }}
    name: Run Lighthouse accessibility tests (shard ${{ matrix.suite.name }})
    steps:
      - name: Checkout repository so that local actions can be used
        uses: actions/checkout@v4
      - name: Merge develop and set up Python
        uses: ./.github/actions/merge-develop-and-setup-python
        with:
          use_cache: false
      # Caching is disabled to avoid poisoning our cache with the
      # changed lighthouse file.
      #
      # - name: Cache node modules
      #   uses: actions/cache@v3
      #   env:
      #     cache-name: cache-node-modules
      #   with:
      #     path: /home/runner/work/oppia/yarn_cache
      #     key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('yarn.lock') }}
      #     restore-keys: |
      #       ${{ runner.os }}-build-${{ env.cache-name }}-
      #       ${{ runner.os }}-build-
      #       ${{ runner.os }}-
      - name: Install Oppia dependencies
        uses: ./.github/actions/install-oppia-dependencies
      - name: Increase lighthouse timeout
        run: |
          # Replace the 1.5 second timeout in lighthouse for retrieving
          # sourcemaps with a 10 second timeout. This timeout is not
          # configurable through Lighthouse's exposed API, so we have
          # resorted to patching the code instead.
          set -e
          FILEPATH=$GITHUB_WORKSPACE/node_modules/lighthouse/lighthouse-core/gather/gatherers/source-maps.js
          SEARCH_TARGET="1500"
          REPLACEMENT="10000"
          occurrences=$(grep -c $SEARCH_TARGET $FILEPATH)
          echo "Found $occurrences occurrences of '$SEARCH_TARGET'"
          # Assert that there is only one match for the target string.
          # If there are ever zero or multiple matches, the lighthouse
          # code has changed and this logic needs to be reviewed.
          [[ $occurrences == "1" ]]
          # Replace the target string with the replacement string.
          sed -i 's/$SEARCH_TARGET/$REPLACEMENT/' $FILEPATH
          echo "Replaced '$SEARCH_TARGET' with '$REPLACEMENT' in $FILEPATH"
        shell: bash
      - name: Install Chrome
        if: startsWith(github.head_ref, 'update-changelog-for-release') == false
        uses: ./.github/actions/install-chrome
      - name: Run Lighthouse accessibility checks shard ${{ matrix.suite.name }}
        if: startsWith(github.head_ref, 'update-changelog-for-release') == false
        run: python -m scripts.run_lighthouse_tests --mode accessibility --pages ${{ join(matrix.suite.pages_to_run, ',') }}
      - name: Report failure if failed on oppia/oppia develop branch
        if: ${{ failure() && github.event_name == 'push' && github.repository == 'oppia/oppia' && github.ref == 'refs/heads/develop'}}
        uses: ./.github/actions/send-webhook-notification
        with:
          message: "A Lighthouse test failed on the upstream develop branch."
          webhook-url: ${{ secrets.BUILD_FAILURE_ROOM_WEBHOOK_URL }}
  check_lighthouse_accessibility_workflow_status:
    needs: [identify_suites_to_run, lighthouse_accessibility]
    if: always()
    runs-on: ubuntu-22.04
    steps:
      - name: Checkout repository so that local actions can be used
        uses: actions/checkout@v4
      - name: Merge develop and set up Python
        uses: ./.github/actions/merge-develop-and-setup-python
        with:
          use_cache: false
      - name: Check workflow status
        uses: ./.github/actions/check-workflow-status
        id: check_workflow_status
        with:
          jobs: ${{ toJson(needs) }}
      - name: Fail if workflow status is failure
        if: ${{ steps.check_workflow_status.outputs.WORKFLOW_STATUS == 'failure' }}
        run: exit 1

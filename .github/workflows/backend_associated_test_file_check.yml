name: End-to-End tests
on:
  workflow_run:
    workflows:
      - Preflight
    types:
      - completed

jobs:
  on_always:
    name: Report workflow triggering
    runs-on: ubuntu-22.04
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4
        with:
          ref: ${{ github.event.workflow_run.head_branch }}
      - name: Output status message
        run: |
          git branch
          env
          echo 'The triggering workflow happened'
  on_failure:
    name: Report failure of prerequisite workflow
    runs-on: ubuntu-22.04
    if: ${{ github.event.workflow_run.conclusion == 'failure' }}
    steps:
      - name: Output status message
        run: echo 'The triggering workflow failed'
  identify_suites_to_run:
    if: ${{ github.event.workflow_run.conclusion == 'success' }}
    name: Identify which suites to run
    runs-on: ubuntu-22.04
    steps:
      - name: Download suites-to-run mapping
        uses: actions/download-artifact@v4
        with:
          run-id: ${{ github.event.workflow_run.id }}
          name: suites-to-run
          github-token: ${{ secrets.GITHUB_TOKEN }}
      - name: Parse suites-to-run mapping
        id: set_test_suites_to_run
        run: echo "TEST_SUITES_JSON=$(cat ./suites-to-run.json)" >> "$GITHUB_OUTPUT"
    outputs:
      test_suites_to_run: ${{ fromJSON(steps.set_test_suites_to_run.outputs.TEST_SUITES_JSON) }}
  e2e_test:
    needs: [identify_suites_to_run]
    runs-on: ubuntu-22.04
    if: ${{ needs.identify_suites_to_run.outputs.test_suites_to_run.e2e.python.count > 0 }}
    strategy:
      matrix:
        suite: ${{ needs.identify_suites_to_run.outputs.test_suites_to_run.e2e.suites }}
    name: e2e_test (${{ matrix.suite.name }})
    steps:
      - name: Checkout repository so that local actions can be used
        uses: actions/checkout@v4
      - name: Merge develop and set up Python
        uses: ./.github/actions/merge-develop-and-setup-python
        with:
          use_cache: true
      - name: Cache node modules
        uses: actions/cache@v3
        env:
          cache-name: cache-node-modules
        with:
          path: /home/runner/work/oppia/yarn_cache
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-
      - name: Attempt to download build files artifact
        id: download_artifact_1
        uses: actions/download-artifact@v4
        continue-on-error: true
        with:
          run-id: ${{ github.event.workflow_run.id }}
          name: build_files
          github-token: ${{ secrets.GITHUB_TOKEN }}
      - name: Unzip build files
        if: steps.download_artifact_1.outcome != 'failure'
        run: |
          ls -la
          unzip build_files.zip
          rm build_files.zip
          echo "Files in ./:"
          ls -la .
          echo "Files in oppia_tools:"
          ls -la oppia_tools
          echo "Files in oppia:"
          ls -la oppia
          echo "Files in build:"
          ls -la oppia/build
          echo "Files in third_party:"
          ls -la oppia/third_party
        working-directory: /home/runner/work/oppia
        shell: bash
      - name: Install Oppia dependencies
        uses: ./.github/actions/install-oppia-dependencies
      - name: Install Chrome
        uses: ./.github/actions/install-chrome
      - name: Install ffmpeg for wdio videos
        run: |
          sudo apt-get update && apt-get install -y apt-transport-https
          sudo apt install ffmpeg
      - name: (Artifact re-build) Cache third_party/static
        if: steps.download_artifact_1.outcome == 'failure'
        uses: actions/cache@v3
        env:
          cache-name: cache-node-modules
        with:
          path: /home/runner/work/oppia/oppia/third_party/static
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('dependencies.json') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-
      - name: (Artifact re-build) Build Webpack
        if: steps.download_artifact_1.outcome == 'failure'
        run: python -m scripts.build --prod_env
      - name: Run E2E Test ${{ matrix.suite.name }}
        uses: oppia/retry@a9fb265410e634c84ee90f3e87f323fde0541037
        with:
          max_attempts: 2
          substrings_indicating_flaky_execution: ${{ matrix.suite.flaky_indicators || '' }}
          command: >
            VIDEO_RECORDING_IS_ENABLED=0;
            xvfb-run -a --server-args="-screen 0, 1285x1000x24"
            python -m scripts.run_e2e_tests --skip-install
            --skip-build --suite=${{ matrix.suite.name }} --prod_env
      - name: Uploading webdriverio-video as Artifacts
        if: ${{ failure() }}
        uses: actions/upload-artifact@v4
        with:
          name: webdriverio-video
          path: /home/runner/work/oppia/webdriverio-video
      - name: Uploading webdriverio screenshots as Artifacts
        if: ${{ failure() }}
        uses: actions/upload-artifact@v4
        with:
          name: webdriverio-screenshots
          path: /home/runner/work/oppia/webdriverio-screenshots
      - name: Uploading webpack bundles as an artifact
        if: ${{ failure() }}
        uses: actions/upload-artifact@v4
        with:
          name: webpack-bundles
          path: /home/runner/work/oppia/oppia/build
      - name: Report failure if failed on oppia/oppia develop branch
        if: ${{ failure() && github.event_name == 'push' && github.repository == 'oppia/oppia' && github.ref == 'refs/heads/develop'}}
        uses: ./.github/actions/send-webhook-notification
        with:
          message: "An E2E test failed on the upstream develop branch."
          webhook-url: ${{ secrets.BUILD_FAILURE_ROOM_WEBHOOK_URL }}
  check_e2e_workflow_status:
    # This job is needed because we cannot make each e2e task a "required"
    # check via GitHub, since different tasks may execute depending on which
    # files are modified in the PR.
    name: Check that all necessary e2e tests pass
    needs: [identify_suites_to_run, e2e_test]
    if: always()
    runs-on: ubuntu-22.04
    steps:
      - name: Checkout repository so that local actions can be used
        uses: actions/checkout@v4
      - name: Merge develop and set up Python
        uses: ./.github/actions/merge-develop-and-setup-python
        with:
          use_cache: false
      - name: Check workflow status
        uses: ./.github/actions/check-workflow-status
        id: check_workflow_status
        with:
          jobs: ${{ toJson(needs) }}
      - name: Fail if workflow status is failure
        if: ${{ steps.check_workflow_status.outputs.WORKFLOW_STATUS == 'failure' }}
        run: exit 1

name: Assign Reviewers for Contributors

on:
  pull_request_target:
    types: [opened]

permissions: read-all

jobs:
  assign_reviewers:
    name: Assign Reviewers
    runs-on: ubuntu-22.04
    permissions:
      pull-requests: write
    steps:
      - name: Set environment variables
        id: set-env
        env:
          AUTHOR: ${{ github.event.pull_request.user.login }}
          REPO: ${{ github.event.repository.name }}
          OWNER: ${{ github.event.repository.owner.login }}
          PR_NUMBER: ${{ github.event.pull_request.number }}
        run: |
          echo "AUTHOR=${AUTHOR}" >> $GITHUB_ENV
          echo "REPO=${REPO}" >> $GITHUB_ENV
          echo "OWNER=${OWNER}" >> $GITHUB_ENV
          echo "PR_NUMBER=${PR_NUMBER}" >> $GITHUB_ENV
      - name: Check if submitter is a new contributor
        id: check-new-contributor
        uses: actions/github-script@v6
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const owner = process.env.OWNER;
            const repo = process.env.REPO;
            const author = process.env.AUTHOR;
            // Fetch merged PRs of the submitter
            const { data } = await github.rest.search.issuesAndPullRequests({
              q: `repo:${owner}/${repo} type:pr is:merged author:${author}`,
            });
            const submitterIsNewContributor = data.total_count === 0;
            console.log(
              `User @${author} is ${
                submitterIsNewContributor
                  ? 'a new contributor'
                  : 'not a new contributor'
              }.`
            );
            core.setOutput('IS_NEW_CONTRIBUTOR', submitterIsNewContributor);
      - name: Check for reviewers and teams
        id: check-reviewers
        uses: actions/github-script@v6
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const prNumber = process.env.PR_NUMBER;
            const owner = process.env.OWNER;
            const repo = process.env.REPO;
            const requestedReviewers = context.payload.pull_request.requested_reviewers.map(r => r.login);
            const requestedTeams = context.payload.pull_request.requested_teams.map(t => t.slug);
            const hasReviewers = requestedReviewers.length > 0;
            const hasTeams = requestedTeams.length > 0;
            core.setOutput('HAS_REVIEWERS', hasReviewers);
            core.setOutput('HAS_TEAMS', hasTeams);
      - name: Assign reviewers as assignees
        if: steps.check-reviewers.outputs.HAS_REVIEWERS == 'true'
        uses: actions/github-script@v6
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const prNumber = process.env.PR_NUMBER;
            const owner = process.env.OWNER;
            const repo = process.env.REPO;
            const requestedReviewers = context.payload.pull_request.requested_reviewers.map(r => r.login);
            try {
              await github.rest.issues.addAssignees({
                owner,
                repo,
                issue_number: prNumber,
                assignees: requestedReviewers,
              });
              console.log(`Assigned reviewers: ${requestedReviewers.join(", ")}`);
            } catch (error) {
              console.error(`Failed to assign reviewers: ${error.message}`);
            }
      - name: Notify team if no individual reviewers are found
        if: steps.check-reviewers.outputs.HAS_REVIEWERS == 'false' && steps.check-reviewers.outputs.HAS_TEAMS == 'false'
        uses: actions/github-script@v6
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const prNumber = process.env.PR_NUMBER;
            const owner = process.env.OWNER;
            const repo = process.env.REPO;
            try {
              await github.rest.issues.createComment({
                owner,
                repo,
                issue_number: prNumber,
                body: `No individual reviewers or teams were found by GitHub. Please assign an appropriate reviewer. @oppia/dev-workflow-reviewers, could you please review the issue? Thank you!`,
              });
              console.log("Notified team about missing reviewers.");
            } catch (error) {
              console.error(`Failed to notify team: ${error.message}`);
            }
      - name: Add PTAL syntax comment for new contributors
        if: steps.check-new-contributor.outputs.IS_NEW_CONTRIBUTOR == 'true'
        uses: actions/github-script@v6
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const author = process.env.AUTHOR;
            const owner = process.env.OWNER;
            const repo = process.env.REPO;
            const prNumber = process.env.PR_NUMBER;
            try {
              const commentBody = `Hello @${author}! Thank you for making a PR. Please ensure your PR is assigned to the correct reviewers -- check the "Assignees" section in the sidebar on the right. Typically, this should match the "Reviewers" section. If it's not correct, you can leave a comment with the syntax \`@reviewer_username PTAL\` to request that a specific reviewer be assigned.\n\n Thanks!`;
              await github.rest.issues.createComment({
                owner,
                repo,
                issue_number: prNumber,
                body: commentBody,
              });
              console.log(`Added PTAL syntax comment for new contributor @${author}.`);
            } catch (error) {
              console.error(`Failed to add comment: ${error.message}`);
            }

name: Process New Pull Request

on:
  pull_request:
    types: [opened]

permissions:
  pull-requests: write
  issues: write

jobs:
  assign_reviewers:
    name: Assign Reviewers
    runs-on: ubuntu-22.04
    steps:
      - name: Set environment variables
        env:
          AUTHOR: ${{ github.event.pull_request.user.login }}
          REPO: ${{ github.event.repository.name }}
          OWNER: ${{ github.event.repository.owner.login }}
        run: |
          echo "AUTHOR=${AUTHOR}" >> $GITHUB_ENV
          echo "REPO=${REPO}" >> $GITHUB_ENV
          echo "OWNER=${OWNER}" >> $GITHUB_ENV
      - name: Assign Reviewers
        uses: actions/github-script@v4
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const prNumber = context.payload.pull_request.number;
            const submitterUsername = process.env.AUTHOR;
            const owner = process.env.OWNER;
            const repo = process.env.REPO;
            // Fetch merged PRs of the submitter
            const mergedPRs = await github.pulls.list({
              owner,
              repo,
              state: "merged",
              per_page: 5,
              sort: "created",
              direction: "desc",
            });
            const submitterIsNewContributor = mergedPRs.data.length === 0;
            console.log(
              `User @${submitterUsername} is ${
                submitterIsNewContributor
                  ? 'a new contributor'
                  : 'not a new contributor'
              }.`
            );
            // Hardcode the requested reviewers
            const requestedReviewers = context.payload.pull_request.requested_reviewers.map(r => r.login); 
            const requestedTeams = context.payload.pull_request.requested_teams.map(t => t.slug);
            // Assign reviewers as assignees
            if (requestedReviewers.length > 0) {
              setTimeout(async () => {
                try {
                  await github.issues.addAssignees({
                    owner,
                    repo,
                    issue_number: prNumber,
                    assignees: requestedReviewers,
                  });
                  console.log(`Assigned reviewers: ${requestedReviewers.join(", ")}`);
                } catch (error) {
                  console.error(`Failed to assign reviewers: ${error.message}`);
                }
              }, Math.random() * 60000); // Random delay up to 60 seconds
            }
            // Notify team if no individual reviewers are found
            if (requestedReviewers.length === 0) {
              setTimeout(async () => {
                try {
                  await github.issues.createComment({
                    owner,
                    repo,
                    issue_number: prNumber,
                    body: `No individual reviewers were found by GitHub. Please assign an appropriate reviewer. @oppia/dev-workflow-reviewers, could you please review the issue? Thank you!`,
                  });
                  console.log("Notified team about missing reviewers.");
                } catch (error) {
                  console.error(`Failed to notify team: ${error.message}`);
                }
              }, Math.random() * 60000); // Random delay up to 60 seconds
            }
            // Add PTAL syntax comment only for new contributors
            if (submitterIsNewContributor) {
              setTimeout(async () => {
                try {
                  const commentBody = `Hello @${submitterUsername}! Thank you for making a PR. Please ensure your PR is assigned to the correct reviewers -- check the "Assignees" section in the sidebar on the right. Typically, this should match the "Reviewers" section. If it's not correct, you can leave a comment with the syntax \`@reviewer_username PTAL\` to request that a specific reviewer be assigned.\n\n Thanks!`;
                  await github.issues.createComment({
                    owner,
                    repo,
                    issue_number: prNumber,
                    body: commentBody,
                  });
                  console.log(`Added PTAL syntax comment for new contributor @${submitterUsername}.`);
                } catch (error) {
                  console.error(`Failed to add comment: ${error.message}`);
                }
              }, Math.random() * 60000); // Random delay up to 60 seconds
            }
